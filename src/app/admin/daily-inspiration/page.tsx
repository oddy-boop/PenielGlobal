
"use client";

import { useState } from "react";
import { Card, CardHeader, CardTitle, CardContent, CardDescription, CardFooter } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Trash2, PlusCircle, Wand2 } from "lucide-react";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter, DialogTrigger } from "@/components/ui/dialog";
import { useToast } from "@/hooks/use-toast";
import { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from "@/components/ui/alert-dialog";
import { fetchDailyInspiration } from "@/app/daily-inspiration/actions";


export default function DailyInspirationManagement() {
  const { toast } = useToast();
  // The list of prompts is now managed by the AI flow. 
  // This page could be repurposed to manage settings for the AI, or show a history of generated prompts.
  // For now, we will show a button to test the generator.
  const [generatedPrompt, setGeneratedPrompt] = useState("");
  const [isGenerating, setIsGenerating] = useState(false);

  const handleGeneratePrompt = async () => {
    setIsGenerating(true);
    setGeneratedPrompt("");
    const result = await fetchDailyInspiration();
    if ('error' in result) {
      toast({
        variant: "destructive",
        title: "Generation Failed",
        description: result.error,
      });
    } else {
      setGeneratedPrompt(result.prompt);
      toast({
        title: "Prompt Generated!",
        description: "A new inspiration has been created by the AI.",
      });
    }
    setIsGenerating(false);
  };
  

  return (
    <div>
      <div className="flex items-center justify-between mb-6">
        <div>
            <h1 className="text-3xl font-bold tracking-tight">Daily Inspiration Management</h1>
            <p className="text-muted-foreground">The Daily Inspiration prompts are now generated by AI.</p>
        </div>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>AI Prompt Generator</CardTitle>
          <CardDescription>
            You can test the AI prompt generator here. The public page will automatically get a new, unique prompt each time a user visits.
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
            <Button onClick={handleGeneratePrompt} disabled={isGenerating}>
                <Wand2 className="mr-2 h-4 w-4" />
                {isGenerating ? "Generating..." : "Generate New Prompt"}
            </Button>
            {generatedPrompt && (
                <div className="p-4 border rounded-lg bg-muted/40">
                    <p className="italic text-center font-serif text-lg">"{generatedPrompt}"</p>
                </div>
            )}
        </CardContent>
        <CardFooter className="border-t pt-6">
            <p className="text-sm text-muted-foreground">
                To customize the AI's behavior, the prompt in <code className="font-mono bg-muted p-1 rounded">src/ai/flows/daily-inspiration.ts</code> can be modified.
            </p>
        </CardFooter>
      </Card>
    </div>
  );
}

